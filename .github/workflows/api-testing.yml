name: API Testing CI/CD

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]

jobs:
  api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run API Tests with @api tag
      run: |
        echo "Running API tests with @api tag..."
        mvn clean test -Dtest=TestRunner -Dcucumber.filter.tags="@api" -Dmaven.test.failure.ignore=false
      continue-on-error: false

    - name: Run API Regression Tests
      run: |
        echo "Running API regression tests..."
        mvn test -Dtest=TestRunner -Dcucumber.filter.tags="@api and @regression" -Dmaven.test.failure.ignore=false
      continue-on-error: false

    - name: Generate Test Reports
      if: always()
      run: |
        echo "Generating test reports..."
        find target -name "*.html" -o -name "*.json" -o -name "*.xml" | head -10

    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: api-test-reports
        path: |
          target/cucumber-reports/
          target/surefire-reports/
        retention-days: 30

    - name: Upload Extent Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: extent-reports
        path: src/test/resources/reports/
        retention-days: 30

    - name: Comment PR with Test Results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');

          // Read test results
          let testStatus = 'PASSED ‚úÖ';
          let message = `## üß™ API Test Results\n\n`;

          if ('${{ job.status }}' !== 'success') {
            testStatus = 'FAILED ‚ùå';
            message += `**Status:** ${testStatus}\n\n`;
            message += `‚ùå API tests failed. Please fix the issues before merging.\n\n`;
            message += `### Tests Run:\n`;
            message += `- ‚úÖ @api tag tests\n`;
            message += `- ‚úÖ @api and @regression tests\n\n`;
            message += `### Artifacts:\n`;
            message += `- üìä Test reports available in GitHub Actions artifacts\n`;
            message += `- üìã Detailed reports in extent-reports artifact\n`;
          } else {
            message += `**Status:** ${testStatus}\n\n`;
            message += `‚úÖ All API tests passed successfully!\n\n`;
            message += `### Tests Run:\n`;
            message += `- ‚úÖ @api tag tests: PASSED\n`;
            message += `- ‚úÖ @api and @regression tests: PASSED\n\n`;
            message += `### Ready for merge! üöÄ\n`;
          }

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });

    - name: Send Discord notification
      if: always()
      run: |
        # Prepare Discord message
        if [ "${{ job.status }}" == "success" ]; then
          COLOR="3066993"
          STATUS_EMOJI="‚úÖ"
          STATUS_TEXT="PASSED"
          DESCRIPTION="All API tests passed successfully! Ready for merge üöÄ"
        else
          COLOR="15158332"
          STATUS_EMOJI="‚ùå"
          STATUS_TEXT="FAILED"
          DESCRIPTION="API tests failed. Please fix the issues before merging."
        fi

        # Send to Discord
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{
               \"embeds\": [{
                 \"title\": \"${STATUS_EMOJI} API Testing CI/CD - ${STATUS_TEXT}\",
                 \"description\": \"${DESCRIPTION}\",
                 \"color\": ${COLOR},
                 \"fields\": [
                   {
                     \"name\": \"Repository\",
                     \"value\": \"${{ github.repository }}\",
                     \"inline\": true
                   },
                   {
                     \"name\": \"Branch\",
                     \"value\": \"${{ github.head_ref || github.ref_name }}\",
                     \"inline\": true
                   },
                   {
                     \"name\": \"Event\",
                     \"value\": \"${{ github.event_name }}\",
                     \"inline\": true
                   },
                   {
                     \"name\": \"Tests Run\",
                     \"value\": \"@api tag tests\\n@api and @regression tests\",
                     \"inline\": false
                   },
                   {
                     \"name\": \"Commit\",
                     \"value\": \"[\`${{ github.sha }}\`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})\",
                     \"inline\": true
                   },
                   {
                     \"name\": \"Actor\",
                     \"value\": \"${{ github.actor }}\",
                     \"inline\": true
                   }
                 ],
                 \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"
               }]
             }" \
             https://discord.com/api/webhooks/1418989799444054036/EaHp_OVJAnpziDcfqdhyyBEZ8Bnuhu4e8ez-BHbdLy5pBMavIjqZ3pTIM12NHlMm0JjW

    - name: Fail job if tests failed
      if: failure()
      run: |
        echo "‚ùå API tests failed! Cannot merge to main branch."
        exit 1